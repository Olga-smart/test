import BaseElement from '../../BaseElement/BaseElement';
declare type PanelOptions = {
    min: number;
    max: number;
    step: number;
    from: number;
    to: number | null;
    vertical: boolean;
    range: boolean;
    scale: boolean;
    scaleIntervals: number;
    valueLabels: boolean;
    minMaxLabels: boolean;
};
declare type ViewForPanel = {
    isRange(): boolean;
    setMinFromOutside(value: number): void;
    setMaxFromOutside(value: number): void;
    setStepFromOutside(value: number): void;
    setLeftFromOutside(value: number): void;
    setRightFromOutside(value: number): void;
    toggleOrientationFromOutside(): void;
    toggleRangeFromOutside(): void;
    toggleScaleFromOutside(): void;
    setScaleIntervals(value: number): void;
    toggleValueLabels(): void;
    toggleMinMaxLabels(): void;
};
declare class Panel extends BaseElement<'form'> {
    private view;
    private min;
    private max;
    private step;
    private from;
    private to;
    private vertical;
    private range;
    private scale;
    private scaleIntervals;
    private valueLabels;
    private minMaxLabels;
    constructor(view: ViewForPanel);
    setValues(options: PanelOptions): void;
    updateFrom(value: number): void;
    updateTo(value: number | ''): void;
    updateStep(value: number): void;
    updateMin(value: number): void;
    updateMax(value: number): void;
    updateScaleIntervals(value: number | ''): void;
    private static addLabel;
    private static calcStepMin;
    private static toggleCheckbox;
    private render;
    private setTypes;
    private setAttributes;
    private setCheckMarks;
    private updateAttributesAfterFromChange;
    private updateAttributesAfterToChange;
    private updateAttributesAfterStepChange;
    private updateAttributesAfterMinChange;
    private updateAttributesAfterMaxChange;
    private handleMinChange;
    private handleMaxChange;
    private handleStepChange;
    private handleFromChange;
    private handleToChange;
    private handleVerticalChange;
    private handleRangeChange;
    private handleScaleChange;
    private handleScaleIntervalsChange;
    private handleValueLabelsChange;
    private handleMinMaxLabelsChange;
    private attachEventHandlers;
}
export { PanelOptions, Panel };
//# sourceMappingURL=Panel.d.ts.map